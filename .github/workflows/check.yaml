name: Check

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize

env:
  CI: true
  NODE_VERSION: 16
  FORCE_COLOR: true
  NODE_MODULES_CACHE_KEY: node-modules-cache
  CMD_SCOPE: --base=origin/main --head=origin/${{ github.event.pull_request.head.ref }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      affected: ${{ steps.affected-apps.outputs.affected }}${{ steps.affected-libs.outputs.affected }}
    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup cache
        uses: actions/cache@v2
        id: bundle
        with:
          path: node_modules
          key: ${{ env.NODE_MODULES_CACHE_KEY }}-${{ hashFiles('package-lock.json') }}
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - name: Install dependencies
        run: npm ci
        if: steps.bundle.outputs.cache-hit != 'true'
      - run: echo "::set-output name=affected::$(npx nx affected:apps ${{ env.CMD_SCOPE }} --plain)"
        id: affected-apps
      - run: echo "::set-output name=affected::$(npx nx affected:libs ${{ env.CMD_SCOPE }} --plain)"
        id: affected-libs
  format:
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.affected != ''
    steps:
      - name: Affected
        run: echo ${{ needs.setup.outputs.affected }}
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ env.NODE_MODULES_CACHE_KEY }}-${{ hashFiles('package-lock.json') }}
      - run: npx nx format:check ${{ env.CMD_SCOPE }} --parallel
  lint:
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.affected != ''
    steps:
      - name: Affected
        run: echo ${{ needs.setup.outputs.affected }}
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ env.NODE_MODULES_CACHE_KEY }}-${{ hashFiles('package-lock.json') }}
      - run: npx nx workspace-lint
      - run: npx nx affected:lint ${{ env.CMD_SCOPE }} --parallel --silent
  test:
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.affected != ''
    steps:
      - name: Affected
        run: echo ${{ needs.setup.outputs.affected }}
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ env.NODE_MODULES_CACHE_KEY }}-${{ hashFiles('package-lock.json') }}
      - run: npx nx affected:test ${{ env.CMD_SCOPE }} --parallel --silent --ci
  build:
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.affected != ''
    steps:
      - name: Affected
        run: echo ${{ needs.setup.outputs.affected }}
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ env.NODE_MODULES_CACHE_KEY }}-${{ hashFiles('package-lock.json') }}
      - run: npx nx affected:build ${{ env.CMD_SCOPE }} --parallel --prod
